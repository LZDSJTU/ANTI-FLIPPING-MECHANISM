clear
clc

tic
% -------------------------------规定固定参数---------------------------
% 定义移动平台的尺寸和重量，长度用LEN原因：L为机械臂连杆参数，重叠，故用LEN
syms LEN W H M real;
% 规定移动平台重心位置
pm=sym('[pm1; pm2; pm3]','real');
% 机械臂质量向量,建议计算时以具体数值代入
m=sym('[m1; m2; m3; m4; m5; m6]','real');
% 机械臂转动惯量，建议计算时以具体数值代入
I1=sym('[I1xx,0,0;0,I1yy,0;0,0,I1zz]','real');
I2=sym('[I2xx,0,0;0,I2yy,0;0,0,I2zz]','real');
I3=sym('[I3xx,0,0;0,I3yy,0;0,0,I3zz]','real');
I4=sym('[I4xx,0,0;0,I4yy,0;0,0,I4zz]','real');
I5=sym('[I5xx,0,0;0,I5yy,0;0,0,I5zz]','real');
I6=sym('[I6xx,0,0;0,I6yy,0;0,0,I6zz]','real');
I(1:3,1:3,1)=I1;
I(1:3,1:3,2)=I2;
I(1:3,1:3,3)=I3;
I(1:3,1:3,4)=I4;
I(1:3,1:3,5)=I5;
I(1:3,1:3,6)=I6;
% D-H参数向量，建议计算时以实际数值代入
d=sym('[d1; d2; d3; d4; d5; d6]','real');
a=sym('[a1; a2; a3; a4; a5; a6]','real');
alpha=sym('[alpha1; alpha2; alpha3; alpha4; alpha5; alpha6]','real');
% 规定机械臂在移动平台上的安装位置
pb=[0.5*LEN; 0.5*W; H];
% 规定坐标系i的原点到质心Ci的向量,这里的c1至c6很有可能为负值，其中c5为0，建议计算时以实际数值代入
rc=sym('[0, c2, 0, 0, 0, 0 ; c1, 0, 0, c4, 0, 0 ; 0, 0, c3, 0, 0, c6]','real');
% 规定坐标系i-1的原点到坐标系i的向量建议计算时以实际数值代入
r=sym('[0, a2, 0, 0, 0, 0 ; a1, 0, 0, a4, 0, 0 ; 0, 0, a3, 0, 0, a6]','real');
% 定义连杆数目
n=6;
% 建立IRB120的D-H参数矩阵
L(1)=Link('d',d(1),'a',a(1),'alpha',alpha(1));
L(2)=Link('d',d(2),'a',a(2),'alpha',alpha(2));
L(3)=Link('d',d(3),'a',a(3),'alpha',alpha(3));
L(4)=Link('d',d(4),'a',a(4),'alpha',alpha(4));
L(5)=Link('d',d(5),'a',a(5),'alpha',alpha(5));
L(6)=Link('d',d(6),'a',a(6),'alpha',alpha(6));
% 建立机器人
IRB120=SerialLink(L,'name','IRB120');
% -------------------------------规定固定参数完---------------------------

% -------------------------------规定初始输入参数---------------------------
%规定机械臂各关节的角度
q=sym('[q1; q2; q3; q4; q5; q6]','real');
%规定机械臂各关节的角速度
qd=sym('[qd1; qd2; qd3; qd4; qd5; qd6]','real');
%规定机械臂各关节的角加速度
qdd=sym('[qdd1; qdd2; qdd3; qdd4; qdd5; qdd6]','real');
% 规定基座线速度、角速度、线加速度、角加速度，建议计算时以实际数值代入，都为0
w0=sym('[0; 0; w03]','real');
w0d=sym('[0; 0; w0d3]','real');
p0dd=sym('[p0dd1; p0dd2; g]','real');
% w0=[0; 0; 0];
% w0d=[0; 0; 0];
% p0dd=[0; 0; 0];
% 规定末端受到的力和力矩,都为0
% f_end=sym('[fe1; fe2; fe3]');
% u_end=sym('[ue1; ue2; ue3]');
f_end=[0; 0; 0];
u_end=[0; 0; 0];

% -------------------------------规定初始输入参数完---------------------------

% 计算每个关节对应的齐次变换矩阵以及相邻两个坐标系之间的齐次变换矩阵
T(1:4,1:4,1)=L(1).A(q(1));
R(1:3,1:3,1)=T(1:3,1:3,1);
for i=2:n
    RMiddleValue=L(i).A(q(i));
    R(1:3,1:3,i)=RMiddleValue(1:3,1:3);
    T(:,:,i)=T(:,:,i-1)*RMiddleValue;
end

% 递推计算每个连杆的角速度和角加速度、线加速度、质心线加速度
z0=[0; 0; 1];
w(1:3,1)=R(:,:,1)'*(w0+qd(1)*z0);
wd(1:3,1)=R(:,:,1)'*(w0d+qdd(1)*z0+qd(1)*cross(w0,z0));
pdd(1:3,1)=R(:,:,1)'*p0dd+cross(wd(1:3,1),r(1:3,1))+cross(w(1:3,1),cross(w(1:3,1),r(1:3,1)));
pcdd(1:3,1)=pdd(1:3,1)+cross(wd(1:3,1),rc(1:3,1))+cross(w(1:3,1),cross(w(1:3,1),rc(1:3,1)));
for i=2:n
    w(1:3,i)=R(:,:,i)'*(w(1:3,i-1)+qd(i)*z0);
    wd(1:3,i)=R(:,:,i)'*(wd(1:3,i-1)+qdd(i)*z0+qd(i)*cross(w(1:3,i-1),z0));
    pdd(1:3,i)=R(:,:,i)'*pdd(1:3,i-1)+cross(wd(1:3,i),r(1:3,i))+cross(w(1:3,i),cross(w(1:3,i),r(1:3,i)));
    pcdd(1:3,i)=pdd(1:3,i)+cross(wd(1:3,i),rc(1:3,i))+cross(w(1:3,i),cross(w(1:3,i),rc(1:3,i)));
end
% 运行至此处，共需要3.119301秒

% 逆向递推计算关节所受的力和力矩
f(1:3,n)=eye(3)*f_end+m(n)*pcdd(1:3,n);
u(1:3,n)=-cross(f(1:3,n),r(1:3,n)+rc(1:3,n))+eye(3)*u_end+cross(eye(3)*f_end,rc(1:3,n))+...
I(1:3,1:3,n)*wd(1:3,n)+cross(w(1:3,n),I(1:3,1:3,n)*w(1:3,n));

for i=(n-1):-1:1
    f(1:3,i)=R(:,:,i+1)*f(1:3,i+1)+m(i)*pcdd(1:3,i);
    u(1:3,i)=-cross(f(1:3,i),r(1:3,i)+rc(1:3,i))+R(:,:,i+1)*u(1:3,i+1)+cross(R(:,:,i+1)*f(1:3,i+1),rc(1:3,i))+...
    I(1:3,1:3,i)*wd(1:3,i)+ cross(w(1:3,i),I(1:3,1:3,i)*w(1:3,i));
end

% 运行至此处，共需 64.696843 秒。
Fb=f(1:3,1);
Mb=u(1:3,1);
toc
